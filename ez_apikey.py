import subprocess
import os
import time
lezi = """
免责声明
本软件（“[apikey轻松配程序]”）按“原样”提供，不提供任何明示或暗示的担保，包括但不限于对适销性、特定用途适用性和不侵权的暗示担保。在任何情况下，作者或版权所有者均不对因软件或软件的使用或其他交易而产生、由软件引起或与之相关的任何索赔、损害或其他责任（无论是合同、侵权还是其他形式的责任）承担任何责任，即使事先被告知此类损害的可能性。
重要提示
本软件可能存在错误、缺陷或不完善之处。
作者不保证软件是：
无错误的。
不间断或可用的。
安全的（不会导致数据丢失、系统损坏或安全漏洞）。
符合你的特定需求或期望。
在法律上、技术上或商业上可行的。
用户自担风险： 你使用、修改、分发本软件或依赖本软件的行为完全由你自己承担风险。你应对使用软件可能导致的任何及所有后果负责，包括但不限于：
数据丢失或损坏。
系统故障或中断。
业务中断。
安全漏洞或数据泄露。
财务损失。
任何其他直接、间接、附带、特殊、后果性或惩罚性损害。
第三方依赖： 本软件可能依赖其他第三方库、服务或组件（统称“依赖项”）。这些依赖项有其自身的许可证和免责声明。本项目的作者不对任何依赖项的功能、安全性、可靠性或合法性负责或提供担保。 你需要自行审查并遵守所有依赖项的条款。
非专业建议： 如果本软件涉及特定领域（如金融、医疗、安全等），其输出或功能不应被视为专业建议。在做出任何依赖软件输出的决策之前，请务必咨询该领域的合格专业人士。
贡献者： 本软件可能包含由社区贡献者提交的代码。项目维护者（作者）会尽力审查贡献，但不保证所有贡献的代码都是安全、无错误或合适的。接受贡献并不意味着维护者对其承担额外的责任。
你的责任
作为软件的用户（或修改者、分发者），你有责任：
在使用前仔细评估软件是否适合你的目的。
在非生产环境中进行充分的测试。
实施适当的安全措施和数据备份。
遵守软件所使用的开源许可证的所有条款。
遵守所有适用的法律和法规。
总结
使用本软件即表示你理解并完全接受本免责声明中的所有条款和风险。如果你不同意这些条款，请不要使用、修改或分发本软件。
本程序无任何政治目的，没有任何政治影射
1. 本程序帮助用户自行在本地设置 DASHSCOPE_API_KEY 环境变量
2. 该密钥仅存储在用户本地环境变量中，程序运行时仅在内存中临时读取
3. 本程序不会以任何形式:
   - 将API密钥传输到外部服务器
   - 将API密钥写入日志/文件
   - 持久化存储API密钥
4. 用户需自行保管好API密钥，本程序开发者不承担因密钥泄露导致的任何责任

使用本程序即表示您同意:
- 您是该API密钥的合法持有者
- 您已了解密钥泄露的风险
- 您自愿承担使用该API密钥的所有责任
__________
欢迎使用apikey轻松配程序😁😁😁
本程序开源免费，如果你花钱购买本程序，请诉诸法律
by CN_榨汁Ovo  愿世界和平
"""
print(lezi)
time.sleep(15)

def set_environment_variable():
    # 获取用户输入
    var_name = "DASHSCOPE_API_KEY"
    var_value = input("请输入变量值: ").strip()

    if not var_name:
        print("错误：变量名不能为空")
        return

    # 使用setx设置用户环境变量
    try:
        # 执行setx命令
        result = subprocess.run(
            ['setx', var_name, var_value],
            check=True,
            text=True,
            capture_output=True
        )
        print("操作成功！")
        print(result.stdout)
        print(f"提示: 新变量将在新打开的终端中生效")
        
    except subprocess.CalledProcessError as e:
        print(f"设置失败，错误代码: {e.returncode}")
        print(f"错误信息: {e.stderr}")

if __name__ == "__main__":
    set_environment_variable()